# .bashrc
# Source global definitions
[ -f /etc/bashrc ] && . /etc/bashrc

case $PATH in
    *$HOME/scripts*) : ;;
    *) PATH="$HOME/bin:$HOME/Scripts:$PATH:.:/sbin:/usr/sbin"
        export PATH
        ;;
esac

# Holy cow, colors!
case $TERM in
    xterm*) export TERM=xterm-256color ;;
    screen) export TERM=screen-256color ;;
    # Putty terminfo does not refresh correctly with vim
    putty*) export TERM=xterm-256color ;;
esac
# Now check and fallback
[ -e /usr/share/terminfo/${TERM:0:1}/$TERM ] || \
    TERM=xtermc


# Set the prompt
export PS1='\[\e[01;32m\]\h:\[\e[01;34m\]\w\n\A \$ \[\e[0000m\]'
export PS2='---> '
export EDITOR=vim
export VISUAL=vim
eval $(dircolors ~/.dir_colors/dircolors.256dark)
export PYTHONSTARTUP=~/scripts-tools-config/home/pythonStartup
export GREP_OPTIONS='--color'
export LESS='-R'
[ -f /usr/bin/source-highlight ] && \
    export LESSOPEN='||/usr/bin/source-highlight --failsafe -fesc -oSTDOUT --style-file=/usr/share/source-highlight/esc.style -i %s'


# local only set: filter all the cmd completion stuff. still
# needs to be piped to less :-(
lset() {
    set $@ |sed '
        # Filter _ assignments
        /^_.*=/ d
        # Filter _ functions
        /^_.*()/,/^[}]/ d'
}

rgrep() {
    find . -name '.git' -prune -o \
           -name '*.pyc' -prune -o \
           -name '*.swp' -prune -o \
           -type f -print0 | xargs -0 grep --color=always $@
}

ls() { /bin/ls --color=auto "$@"; }

la() { ls -a $@; }

lah() { ls -lah $@; }

svim() { screenkey -t "$1" vim "$1"; }

go() {
    # start screen attaching to existing ssh-keyring agent.
    ~/bin/screenkey
}

sssh() {
    case $1 in
        root@*) title=${1/root@/#};;
        dlocks@*) title=${1/dlocks@/d@};;
        *) title=${1} ;;
    esac
    export title
    screenkey -t "$title" ssh "$@"
}
ssu() {
    case x$1 in
      # Su w/o environment: either root or another user.
      x-) [ x"$2" = x"" ] && title="-#" || title="$2" ;;
      # Su to root keeping environment.
      x) title="#" ;;
      *) title="$2" ;;
    esac
    screenkey -t "$title" su "$@"
}
