#!/bin/bash
# This set fixes up the profile.  Run for each user!

# Generally:
# 1. Clone repos
# 2. Setup autostarts
# 3. Configure Gnome
# 4. LINK FILES
# 5. Cleanup

# Find repo root.
SCRIPTPATH=$( cd $(dirname $0) ; pwd -P )
repo=${SCRIPTPATH%/scripts*}

###
# Clone repos

# Install and update vim settings.
[ -d ~/.vim ] || mkdir ~/.vim
(
    cd ~/.vim
    if [ ! -d ~/.vim/.git ]; then
        git clone git@github.com:dwlocks/dotvim.git ~/.vim
        git submodule update --init
        ln -s .vim/vimrc .vimrc
        ln -s .vim/gvimrc .gvimrc
    else
        git pull origin
    fi
)

# clone gorilla password safe
gor_dir=~/bin/gorilla
[ -d ~/bin/gorilla ] || mkdir -p ~/bin/gorilla
(
    cd ~/bin/
    [ -d gorilla/.git ] || git clone git://github.com/zdia/gorilla.git
    cd gorilla && git checkout v1.5.3.7
)
ln -f -s ~/bin/gorilla/sources/gorilla.tcl ~/bin/gorilla-1.5.3.7

###
# Setup autostart items

# Startup items to remove from gnome-session (gnome-session-properties):
startup_items=( at-spi-dbus-bus.desktop
caribou-autostart.desktop
gnome-sound-applet.desktop
imsettings-start.desktop
libcanberra-login-sound.desktop
nautilus-autostart.desktop
spice-vdagent.desktop
user-dirs-update-gtk.desktop
)

a_s_dir=~/.config/autostart
# Create a local autostart dir
[ -d $a_s_dir ] || mkdir -p $a_s_dir
# Edit items to override from system autostart while copying
for item in ${startup_items[@]}; do
    [ -f /etc/xdg/autostart/$item ] && \
         sed -e '
             /X-GNOME-Autostart-enabled/ {
                s/true/false/I
                # Tuck into hold buffer
                h
            }
            $ {
                x
                # If the hold buffer was empty, then we didnt match
                /^$/ a\
                X-GNOME-Autostart-enabled=false
            }
            s/NoDisplay=true/NoDisplay=false/
        ' < /etc/xdg/autostart/$item > $a_s_dir/$item
done

###
# Configure Gnome

# Set up gnome-shell auto-move-windows:
gsettings set org.gnome.shell.extensions.auto-move-windows application-list \
    "['gnome-terminal.desktop:1','firefox.desktop:2','mozilla-thunderbird.desktop:3']"

# Enable extensions: auto-move-windows remove-accessibility-icon,
#    pidgin-integration, alternate-tab
ext_uuids="alternate-tab@gnome-shell-extensions.gcampax.github.com
auto-move-windows@gnome-shell-extensions.gcampax.github.com
permanent-notifications@bonzini.org
pidgin-conversation-integration@kagesenshi.org"
for ext in $ext_uuids; do
    # This tool complains loudly if the extensions are already enabled.
    gnome-shell-extension-tool -e "$ext" 2>/dev/null
done

# Disable gnome control of synaptics vars
gsettings set org.gnome.settings-daemon.plugins.mouse active false

mkdir -p ~/.local/share/icc
mkdir -p ~/.local/share/applications
mkdir -p ~/.dir_colors
# TODO: create missing dirs from found list of files below.

###
# Link all files in $repo/home to their appropriate hidden locations.
# This is the heavy lifting.
cd $repo/home
for f in $(find . -type f); do
    # If it's a file, back that shit up.
    # If it's a link already, leave it alone.
    f=${f#./}
    echo "Linking $f"
    [ -h ~/.$f ] || ln -b -s $repo/home/$f ~/.$f
done

###
# Cleanup

# Delete the xcalib autostart unless on the samsung.  If a profile appears for
# other monitores, this will get more complex.
case $(< /sys/class/dmi/id/board_name) in
    "NP900X4D-A05US") : ;;
    *) rm $a_s_dir/xcalib.desktop ;;
esac

# Fix ssh perms
chmod -R go-rwx $repo/home/ssh
